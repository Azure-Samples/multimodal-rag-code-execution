# Use a specific version of the python image for more predictable builds
FROM python:3.10.13-slim-bookworm

# Create a non-root user 'appuser' and set the home directory
RUN adduser --disabled-password --gecos '' --home /home/appuser appuser

# Install system dependencies
# Combine update, install, and cleanup steps to minimize image layers and reduce size
RUN apt-get update && apt-get install -y \
    graphviz \
    libgraphviz-dev \
    # python-tk \
    # python3-tk \
    tk-dev \
    libffi-dev \
    git \
    && rm -rf /var/lib/apt/lists/*  # Clean up to reduce image size

# Set the working directory
WORKDIR /home/appuser/app/

# Set the PYTHONPATH environment variable to include the /home/appuser/app/code directory
ENV PATH="/home/appuser/.local/bin:$PATH"
ENV PYTHONPATH="${PYTHONPATH}:/home/appuser/app/code:/home/appuser/app/code/utils"



# Create a Python virtual environment
RUN python -m venv venv

# Upgrade pip in the virtual environment to the latest version
RUN . venv/bin/activate && pip install --upgrade pip

# Copy just the requirements.txt first to leverage Docker cache
COPY requirements.txt .

# Install Python dependencies within the virtual environment
RUN . venv/bin/activate && pip install --requirement requirements.txt \
    && rm -rf /root/.cache/pip  # Clean up pip cache to reduce image size

# Pre-create directories that the application will need at runtime, ensuring correct ownership
RUN mkdir -p /home/appuser/app/.files && chown -R appuser:appuser /home/appuser/app

# Copy the application code and other files with the correct ownership
COPY --chown=appuser:appuser ./ui/ ./ui
COPY --chown=appuser:appuser ./code/ ./code/
COPY --chown=appuser:appuser ./ui/chainlit.md /home/appuser/app/code/chainlit.md
COPY --chown=appuser:appuser ./ui/chainlit.md /home/appuser/app/chainlit.md
COPY --chown=appuser:appuser ./ui/chainlit.md /home/appuser/app/ui/pages/chainlit.md

# Switch to the non-root user for subsequent commands and container runtime
USER root

# Expose the application port
EXPOSE 8000
# Set the working directory just in case again
WORKDIR /home/appuser/app/
# Use sh -c to ensure the virtual environment is activated before running the application
# CMD ["sh", "-c", ". venv/bin/activate && chainlit run ./ui/chat.py"]
CMD ["sh", "-c", ". venv/bin/activate && chainlit run ./ui/chat.py"]
#CMD ["venv/bin/chainlit", "run", "./ui/chat.py"]