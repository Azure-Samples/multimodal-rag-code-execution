{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "7608910797142572118"
    }
  },
  "parameters": {
    "openAIName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "An existing Azure OpenAI resource"
      }
    },
    "openAIRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "An existing Azure OpenAI resource group"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location in which all resources should be deployed."
      }
    },
    "aiSearchRegion": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": [
        "francecentral",
        "eastus",
        "japaneast"
      ],
      "metadata": {
        "description": "The region for the Azure AI Search service"
      }
    },
    "namePrefix": {
      "type": "string",
      "defaultValue": "dev",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "A prefix that will be prepended to resource names"
      }
    },
    "newOpenAILocation": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "swedencentral",
        "eastus",
        ""
      ],
      "metadata": {
        "description": "Location for a new Azure OpenAI resource. Leave openAIName and openAIRGName empty to deploy a new resource."
      }
    },
    "skipImageBuild": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True to avoid building images from the repo. In this case images must be published via push.ps1 script"
      }
    },
    "useWebApps": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True to deploy web apps instead of container apps"
      }
    }
  },
  "variables": {
    "uniqueid": "[uniqueString(resourceGroup().id)]",
    "di_location": "westeurope",
    "logWorkspaceName": "[format('log-{0}', variables('uniqueid'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          },
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "12866286845763515223"
            }
          },
          "parameters": {
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "This is the base name for each Azure resource name (6-12 chars)"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            },
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev",
              "minLength": 2,
              "maxLength": 10,
              "metadata": {
                "description": "A prefix that will be prepended to resource names"
              }
            }
          },
          "variables": {
            "storageName": "[format('{0}st{1}', parameters('namePrefix'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[variables('storageName')]",
              "location": "[parameters('location')]",
              "kind": "FileStorage",
              "properties": {
                "allowBlobPublicAccess": true,
                "allowCrossTenantReplication": false,
                "allowSharedKeyAccess": true,
                "defaultToOAuthAuthentication": false,
                "dnsEndpointType": "Standard",
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    }
                  }
                },
                "largeFileSharesState": "Enabled",
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "publicNetworkAccess": "Enabled",
                "supportsHttpsTrafficOnly": true
              },
              "sku": {
                "name": "Premium_LRS"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('storageName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "protocolSettings": {
                  "smb": {
                    "multichannel": {
                      "enabled": false
                    }
                  }
                },
                "shareDeleteRetentionPolicy": {
                  "days": 14,
                  "enabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/default/{1}', variables('storageName'), variables('storageName'))]",
              "properties": {
                "accessTier": "Premium",
                "enabledProtocols": "SMB",
                "shareQuota": 1024
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
              ]
            }
          ],
          "outputs": {
            "storageName": {
              "type": "string",
              "metadata": {
                "description": "The name of the storage account."
              },
              "value": "[variables('storageName')]"
            },
            "storageKey": {
              "type": "string",
              "metadata": {
                "description": "The key of the storage account."
              },
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2023-01-01').keys[0].value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acrDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "18015573836674535968"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev",
              "metadata": {
                "description": "A prefix that will be prepended to resource names"
              }
            },
            "containerRegistry": {
              "type": "string",
              "defaultValue": "acr",
              "metadata": {
                "description": "The name of the Azure Container Registry"
              }
            },
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "A unique identifier that will be appended to resource names"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location in which all resources should be deployed."
              }
            }
          },
          "variables": {
            "varcontainerRegistry": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('containerRegistry'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-11-01-preview",
              "name": "[variables('varcontainerRegistry')]",
              "location": "[parameters('location')]",
              "properties": {
                "adminUserEnabled": true,
                "anonymousPullEnabled": false,
                "dataEndpointEnabled": false,
                "encryption": {
                  "status": "disabled"
                },
                "metadataSearch": "Disabled",
                "networkRuleBypassOptions": "AzureServices",
                "policies": {
                  "azureADAuthenticationAsArmPolicy": {
                    "status": "enabled"
                  },
                  "exportPolicy": {
                    "status": "enabled"
                  },
                  "quarantinePolicy": {
                    "status": "disabled"
                  },
                  "retentionPolicy": {
                    "days": 7,
                    "status": "disabled"
                  },
                  "softDeletePolicy": {
                    "retentionDays": 7,
                    "status": "disabled"
                  },
                  "trustPolicy": {
                    "status": "disabled",
                    "type": "Notary"
                  }
                },
                "publicNetworkAccess": "Enabled",
                "zoneRedundancy": "Disabled"
              },
              "sku": {
                "name": "Premium"
              }
            }
          ],
          "outputs": {
            "containerRegistryName": {
              "type": "string",
              "value": "[variables('varcontainerRegistry')]"
            },
            "containerRegistryPassword": {
              "type": "string",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('varcontainerRegistry')), '2023-11-01-preview').passwords[0].value]"
            },
            "containerRegistryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('varcontainerRegistry'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[not(parameters('skipImageBuild'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "buildImages",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acrName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.containerRegistryName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "8239963908064705840"
            }
          },
          "parameters": {
            "acrName": {
              "type": "string"
            },
            "gitRepoUrl": {
              "type": "string",
              "defaultValue": "https://github.com/Azure-Samples/multimodal-rag-code-execution"
            },
            "gitRepoBranch": {
              "type": "string",
              "defaultValue": "main"
            },
            "imageTag": {
              "type": "string",
              "defaultValue": "latest"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-07-31-preview",
              "name": "script-identity-build",
              "location": "[resourceGroup().location]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build'), '2023-07-31-preview').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2019-10-01-preview",
              "name": "buildChat",
              "location": "[resourceGroup().location]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.61.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "forceUpdateTag": "[parameters('imageTag')]",
                "environmentVariables": [
                  {
                    "name": "ACR_NAME",
                    "value": "[parameters('acrName')]"
                  },
                  {
                    "name": "GIT_REPO_URL",
                    "value": "[parameters('gitRepoUrl')]"
                  },
                  {
                    "name": "GIT_REPO_BRANCH",
                    "value": "[parameters('gitRepoBranch')]"
                  },
                  {
                    "name": "IMAGE_TAG",
                    "value": "[parameters('imageTag')]"
                  }
                ],
                "scriptContent": "      #!/bin/bash\r\n      \r\n      set -e\r\n\r\n      apk add --no-cache git\r\n      \r\n      # Clone the Git repository\r\n      repoDir=\"$HOME/repo\"\r\n      git clone $GIT_REPO_URL $repoDir\r\n      cd $repoDir\r\n      git checkout $GIT_REPO_BRANCH\r\n      \r\n      # Build and push the Docker image to ACR\r\n      az acr build --registry $ACR_NAME --image \"research-copilot:${IMAGE_TAG}\" --file \"docker/dockerfile_chainlit_app\" ui >/dev/null\r\n    "
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2019-10-01-preview",
              "name": "buildMain",
              "location": "[resourceGroup().location]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.61.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "forceUpdateTag": "[parameters('imageTag')]",
                "environmentVariables": [
                  {
                    "name": "ACR_NAME",
                    "value": "[parameters('acrName')]"
                  },
                  {
                    "name": "GIT_REPO_URL",
                    "value": "[parameters('gitRepoUrl')]"
                  },
                  {
                    "name": "GIT_REPO_BRANCH",
                    "value": "[parameters('gitRepoBranch')]"
                  },
                  {
                    "name": "IMAGE_TAG",
                    "value": "[parameters('imageTag')]"
                  }
                ],
                "scriptContent": "      #!/bin/bash\r\n      \r\n      set -e\r\n\r\n      apk add --no-cache git\r\n      \r\n      # Clone the Git repository\r\n      repoDir=\"$HOME/repo\"\r\n      git clone $GIT_REPO_URL $repoDir\r\n      cd $repoDir\r\n      git checkout $GIT_REPO_BRANCH\r\n      \r\n      # Build and push the Docker image to ACR\r\n      az acr build --registry $ACR_NAME --image \"research-copilot-main:${IMAGE_TAG}\" --file \"docker/dockerfile_streamlit_app\" ui >/dev/null\r\n    "
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2019-10-01-preview",
              "name": "buildApi",
              "location": "[resourceGroup().location]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.61.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "forceUpdateTag": "[parameters('imageTag')]",
                "environmentVariables": [
                  {
                    "name": "ACR_NAME",
                    "value": "[parameters('acrName')]"
                  },
                  {
                    "name": "GIT_REPO_URL",
                    "value": "[parameters('gitRepoUrl')]"
                  },
                  {
                    "name": "GIT_REPO_BRANCH",
                    "value": "[parameters('gitRepoBranch')]"
                  },
                  {
                    "name": "IMAGE_TAG",
                    "value": "[parameters('imageTag')]"
                  }
                ],
                "scriptContent": "      #!/bin/bash\r\n      \r\n      set -e\r\n\r\n      apk add --no-cache git\r\n      \r\n      # Clone the Git repository\r\n      repoDir=\"$HOME/repo\"\r\n      git clone $GIT_REPO_URL $repoDir\r\n      cd $repoDir\r\n      git checkout $GIT_REPO_BRANCH\r\n      \r\n      # Build and push the Docker image to ACR\r\n      az acr build --registry $ACR_NAME --image \"research-copilot-api:${IMAGE_TAG}\" --file \"docker/dockerfile_api\" code >/dev/null\r\n    "
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'script-identity-build')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acrDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openaiDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "openAIName": {
            "value": "[parameters('openAIName')]"
          },
          "openAIRGName": {
            "value": "[parameters('openAIRGName')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          },
          "location": "[if(not(empty(parameters('newOpenAILocation'))), createObject('value', parameters('newOpenAILocation')), createObject('value', 'swedencentral'))]",
          "envName": {
            "value": "[parameters('namePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10905337805923934866"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "openAiSkuName": {
              "type": "string",
              "defaultValue": "S0"
            },
            "namePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location in which all resources should be deployed."
              }
            },
            "openAIName": {
              "type": "string",
              "metadata": {
                "description": "An existing Azure OpenAI resource"
              }
            },
            "openAIRGName": {
              "type": "string",
              "metadata": {
                "description": "An existing Azure OpenAI resource group"
              }
            },
            "aoaiGpt4ModelName": {
              "type": "string",
              "defaultValue": "gpt-4o"
            },
            "aoaiGpt4ModelVersion": {
              "type": "string",
              "defaultValue": "2024-05-13"
            },
            "aoaiGpt4ModelDeploymentName": {
              "type": "string",
              "defaultValue": "gpt-4o"
            },
            "aoaiEmbedingsName": {
              "type": "string",
              "defaultValue": "text-embedding-3-large"
            },
            "aoaiEmbedingsVersion": {
              "type": "string",
              "defaultValue": "1"
            },
            "aoaiEmbedingsDeploymentName": {
              "type": "string",
              "defaultValue": "text-embedding-3-large"
            },
            "deployments": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "[parameters('aoaiGpt4ModelName')]",
                  "model": {
                    "format": "OpenAI",
                    "name": "[parameters('aoaiGpt4ModelDeploymentName')]",
                    "version": "[parameters('aoaiGpt4ModelVersion')]",
                    "capacity": 10,
                    "contentFilter": "Default"
                  },
                  "sku": {
                    "name": "Standard",
                    "capacity": 30
                  }
                },
                {
                  "name": "[parameters('aoaiEmbedingsName')]",
                  "model": {
                    "format": "OpenAI",
                    "name": "[parameters('aoaiEmbedingsDeploymentName')]",
                    "version": "[parameters('aoaiEmbedingsVersion')]",
                    "capacity": 10,
                    "contentFilter": "Default"
                  },
                  "sku": {
                    "name": "Standard",
                    "capacity": 120
                  }
                }
              ]
            }
          },
          "variables": {
            "tags": {
              "Creator": "ServiceAccount",
              "Service": "OpenAI",
              "Environment": "[parameters('envName')]"
            },
            "aoaiResourceName": "[if(empty(parameters('openAIName')), format('{0}-aoai-{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)), parameters('openAIName'))]",
            "varAoaiCustomDomain": "[variables('aoaiResourceName')]",
            "oaiName": "[if(not(empty(parameters('openAIName'))), variables('aoaiResourceName'), variables('varAoaiCustomDomain'))]"
          },
          "resources": [
            {
              "condition": "[empty(parameters('openAIName'))]",
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2022-03-01",
              "name": "[variables('varAoaiCustomDomain')]",
              "location": "[parameters('location')]",
              "tags": "[variables('tags')]",
              "kind": "OpenAI",
              "properties": {
                "customSubDomainName": "[variables('varAoaiCustomDomain')]",
                "publicNetworkAccess": "Enabled"
              },
              "sku": {
                "name": "[parameters('openAiSkuName')]"
              }
            },
            {
              "copy": {
                "name": "aoaiDeployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "condition": "[empty(parameters('openAIName'))]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-10-01-preview",
              "name": "[format('{0}/{1}', variables('varAoaiCustomDomain'), parameters('deployments')[copyIndex()].name)]",
              "sku": {
                "name": "Standard",
                "capacity": 10
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('deployments')[copyIndex()].model.name]",
                  "version": "[parameters('deployments')[copyIndex()].model.version]"
                },
                "versionUpgradeOption": "OnceCurrentVersionExpired",
                "currentCapacity": "[parameters('deployments')[copyIndex()].model.capacity]",
                "raiPolicyName": "Microsoft.Default"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('varAoaiCustomDomain'))]"
              ]
            }
          ],
          "outputs": {
            "aoaiResourceName": {
              "type": "string",
              "value": "[variables('oaiName')]"
            },
            "aoaiResourceKey": {
              "type": "string",
              "value": "[if(not(empty(parameters('openAIName'))), listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('openAIRGName')), 'Microsoft.CognitiveServices/accounts', variables('aoaiResourceName')), '2022-03-01').key1, listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('varAoaiCustomDomain')), '2022-03-01').key1)]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "azureVisionResource",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "15564380524733416981"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev",
              "metadata": {
                "description": "A prefix that will be prepended to resource names"
              }
            },
            "accountsVisionResTstName": {
              "type": "string",
              "defaultValue": "vision",
              "metadata": {
                "description": "The name of the Vision resource"
              }
            },
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "A unique identifier that will be appended to resource names"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location in which all resources should be deployed."
              }
            }
          },
          "variables": {
            "varaccountsVisionResTstName": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('accountsVisionResTstName'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-10-01-preview",
              "name": "[variables('varaccountsVisionResTstName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S1"
              },
              "kind": "ComputerVision",
              "identity": {
                "type": "None"
              },
              "properties": {
                "customSubDomainName": "[variables('varaccountsVisionResTstName')]",
                "restore": false,
                "networkAcls": {
                  "defaultAction": "Allow",
                  "virtualNetworkRules": [],
                  "ipRules": []
                },
                "publicNetworkAccess": "Disabled"
              }
            }
          ],
          "outputs": {
            "accountsVisionResTstName": {
              "type": "string",
              "value": "[variables('varaccountsVisionResTstName')]"
            },
            "accountsVisionEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('varaccountsVisionResTstName')), '2023-10-01-preview').endpoint]"
            },
            "accountsVisionKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('varaccountsVisionResTstName')), '2023-10-01-preview').key1]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmosdbDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "91268126854318344"
            }
          },
          "parameters": {
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "This is the base name for each Azure resource name (6-12 chars)"
              }
            },
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            }
          },
          "variables": {
            "varcosmosdbName": "[format('{0}-cosmosdb-research{1}', parameters('namePrefix'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2024-02-15-preview",
              "name": "[variables('varcosmosdbName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
              },
              "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                  "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "enableMaterializedViews": false,
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enablePerRegionPerPartitionAutoscale": false,
                "enableBurstCapacity": false,
                "enablePriorityBasedExecution": false,
                "minimalTlsVersion": "Tls12",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session",
                  "maxIntervalInSeconds": 5,
                  "maxStalenessPrefix": 100
                },
                "locations": [
                  {
                    "locationName": "Sweden Central",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "cors": [],
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ],
                "ipRules": [],
                "backupPolicy": {
                  "type": "Periodic",
                  "periodicModeProperties": {
                    "backupIntervalInMinutes": 240,
                    "backupRetentionIntervalInHours": 8,
                    "backupStorageRedundancy": "Geo"
                  }
                },
                "networkAclBypassResourceIds": [],
                "diagnosticLogSettings": {
                  "enableFullTextQuery": "None"
                }
              },
              "identity": {
                "type": "None"
              }
            }
          ],
          "outputs": {
            "cosmosdbName": {
              "type": "string",
              "value": "[variables('varcosmosdbName')]"
            },
            "cosmosDbUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('varcosmosdbName')), '2024-02-15-preview').documentEndpoint]"
            },
            "cosmosDbKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('varcosmosdbName')), '2024-02-15-preview').primaryMasterKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai_search",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "aiSearchRegion": {
            "value": "[parameters('aiSearchRegion')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "5262579537348748055"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev",
              "metadata": {
                "description": "A prefix that will be prepended to resource names"
              }
            },
            "aiSearchRegion": {
              "type": "string",
              "defaultValue": "eastus",
              "metadata": {
                "description": "The region for the Azure AI Search service"
              }
            },
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "A unique identifier that will be appended to resource names"
              }
            }
          },
          "variables": {
            "aiSearchName": "aisearch",
            "varaiSearchName": "[format('{0}{1}{2}', parameters('namePrefix'), variables('aiSearchName'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[variables('varaiSearchName')]",
              "location": "[parameters('aiSearchRegion')]",
              "sku": {
                "name": "standard"
              },
              "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default",
                "publicNetworkAccess": "enabled",
                "networkRuleSet": {
                  "ipRules": []
                },
                "encryptionWithCmk": {
                  "enforcement": "Unspecified"
                },
                "disableLocalAuth": false,
                "authOptions": {
                  "apiKeyOnly": {}
                },
                "semanticSearch": "standard"
              }
            }
          ],
          "outputs": {
            "aiSearchName": {
              "type": "string",
              "value": "[variables('varaiSearchName')]"
            },
            "aiSearchEndpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net', variables('varaiSearchName'))]"
            },
            "aiSearchAdminKey": {
              "type": "string",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('varaiSearchName')), '2023-11-01').primaryKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "document-Intelligence",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          },
          "documentIntelligence": {
            "value": "doc-int"
          },
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "location": {
            "value": "[variables('di_location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10083908169315975569"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev",
              "metadata": {
                "description": "A prefix that will be prepended to resource names"
              }
            },
            "documentIntelligence": {
              "type": "string",
              "defaultValue": "di",
              "metadata": {
                "description": "The name of the Azure Container Registry"
              }
            },
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "A unique identifier that will be appended to resource names"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "eastus",
              "metadata": {
                "description": "The location in which all resources should be deployed."
              }
            }
          },
          "variables": {
            "vardocumentIntelligence": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('documentIntelligence'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-10-01-preview",
              "name": "[variables('vardocumentIntelligence')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "kind": "FormRecognizer",
              "tags": {},
              "properties": {
                "customSubDomainName": "[variables('vardocumentIntelligence')]",
                "networkAcls": {
                  "defaultAction": "Allow",
                  "virtualNetworkRules": [],
                  "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
              },
              "identity": {
                "type": "None"
              }
            }
          ],
          "outputs": {
            "documentIntelligenceName": {
              "type": "string",
              "value": "[variables('vardocumentIntelligence')]"
            },
            "documentIntelligenceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('vardocumentIntelligence'))]"
            },
            "documentIntelligenceEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('vardocumentIntelligence')), '2023-10-01-preview').endpoint]"
            },
            "documentIntelligenceKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('vardocumentIntelligence')), '2023-10-01-preview').key1]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "machine-learing-worksapce",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          },
          "machineLearningName": {
            "value": "mlws"
          },
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsId": {
            "value": "[resourceId('Microsoft.Insights/components', format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid')))]"
          },
          "acrId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.containerRegistryId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10559586848103739307"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string",
              "defaultValue": "dev",
              "metadata": {
                "description": "A prefix that will be prepended to resource names"
              }
            },
            "machineLearningName": {
              "type": "string",
              "defaultValue": "di",
              "metadata": {
                "description": "The name of the Azure Container Registry"
              }
            },
            "appInsightsId": {
              "type": "string",
              "metadata": {
                "description": "The Application Insights resource ID"
              }
            },
            "acrId": {
              "type": "string",
              "metadata": {
                "description": "The Azure Container Registry resource ID"
              }
            },
            "uniqueid": {
              "type": "string",
              "metadata": {
                "description": "A unique identifier that will be appended to resource names"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location in which all resources should be deployed."
              }
            }
          },
          "variables": {
            "varMachineLearning": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('machineLearningName'), parameters('uniqueid'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "uniqueid": {
                    "value": "[parameters('uniqueid')]"
                  },
                  "storageAccountName": {
                    "value": "stml"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "9136239861968080458"
                    }
                  },
                  "parameters": {
                    "namePrefix": {
                      "type": "string",
                      "defaultValue": "dev",
                      "metadata": {
                        "description": "A prefix that will be prepended to resource names"
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container registry to be deployed"
                      }
                    },
                    "uniqueid": {
                      "type": "string",
                      "metadata": {
                        "description": "A unique identifier that will be appended to resource names"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "The location in which all resources should be deployed."
                      }
                    },
                    "storageSkuName": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "allowedValues": [
                        "Standard_LRS",
                        "Standard_GRS",
                        "Standard_RAGRS",
                        "Standard_ZRS",
                        "Premium_LRS",
                        "Premium_ZRS",
                        "Standard_GZRS",
                        "Standard_RAGZRS"
                      ],
                      "metadata": {
                        "description": "The SKU to use for the Storage Account"
                      }
                    }
                  },
                  "variables": {
                    "varStorageAccountName": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('storageAccountName'), parameters('uniqueid'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2019-06-01",
                      "name": "[variables('varStorageAccountName')]",
                      "kind": "StorageV2",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('storageSkuName')]"
                      },
                      "properties": {
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Allow",
                          "ipRules": [],
                          "virtualNetworkRules": []
                        },
                        "allowBlobPublicAccess": true
                      }
                    }
                  ],
                  "outputs": {
                    "storageAccountId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('varStorageAccountName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "keyvault-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "ml-kv"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "uniqueid": {
                    "value": "[parameters('uniqueid')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "6768915232713191037"
                    }
                  },
                  "parameters": {
                    "namePrefix": {
                      "type": "string",
                      "defaultValue": "dev",
                      "metadata": {
                        "description": "A prefix that will be prepended to resource names"
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": "ml-kv",
                      "metadata": {
                        "description": "The name of the container registry to be deployed"
                      }
                    },
                    "uniqueid": {
                      "type": "string",
                      "metadata": {
                        "description": "A unique identifier that will be appended to resource names"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "The location in which all resources should be deployed."
                      }
                    }
                  },
                  "variables": {
                    "varkeyVaultName": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('keyVaultName'), parameters('uniqueid'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2019-09-01",
                      "name": "[variables('varkeyVaultName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "tenantId": "[subscription().tenantId]",
                        "sku": {
                          "name": "standard",
                          "family": "A"
                        },
                        "accessPolicies": [],
                        "networkAcls": {
                          "defaultAction": "Allow",
                          "bypass": "AzureServices"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "keyVaultId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('varkeyVaultName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ml-workspace-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "workspaceName": {
                    "value": "[variables('varMachineLearning')]"
                  },
                  "storageId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2022-09-01').outputs.storageAccountId.value]"
                  },
                  "appInsightsId": {
                    "value": "[parameters('appInsightsId')]"
                  },
                  "containerRegistryId": {
                    "value": "[parameters('acrId')]"
                  },
                  "keyVaultId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault-deployment'), '2022-09-01').outputs.keyVaultId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "3300905069995475912"
                    }
                  },
                  "parameters": {
                    "workspaceName": {
                      "type": "string",
                      "defaultValue": "mlws",
                      "metadata": {
                        "description": "The name of the container registry to be deployed"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "The location in which all resources should be deployed."
                      }
                    },
                    "appInsightsId": {
                      "type": "string"
                    },
                    "storageId": {
                      "type": "string"
                    },
                    "keyVaultId": {
                      "type": "string"
                    },
                    "containerRegistryId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "varWorkspaceName": "[parameters('workspaceName')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces",
                      "apiVersion": "2020-09-01-preview",
                      "name": "[variables('varWorkspaceName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "basic",
                        "tier": "basic"
                      },
                      "properties": {
                        "friendlyName": "[variables('varWorkspaceName')]",
                        "storageAccount": "[parameters('storageId')]",
                        "keyVault": "[parameters('keyVaultId')]",
                        "containerRegistry": "[parameters('containerRegistryId')]",
                        "applicationInsights": "[parameters('appInsightsId')]",
                        "hbiWorkspace": true
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('varWorkspaceName'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[variables('varWorkspaceName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyvault-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'storage-deployment')]"
              ]
            }
          ],
          "outputs": {
            "workspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ml-workspace-deployment'), '2022-09-01').outputs.name.value]"
            },
            "workspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ml-workspace-deployment'), '2022-09-01').outputs.id.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acrDeploy')]",
        "[resourceId('Microsoft.Insights/components', format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "script",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uniqueid": {
            "value": "[variables('uniqueid')]"
          },
          "storageName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageDeploy'), '2022-09-01').outputs.storageName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "11199256871843515654"
            }
          },
          "parameters": {
            "uniqueid": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "currentTime": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-07-31-preview",
              "name": "[format('script-identity-{0}', parameters('uniqueid'))]",
              "location": "[resourceGroup().location]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('script-identity-{0}', parameters('uniqueid'))), 'owner')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('script-identity-{0}', parameters('uniqueid'))), '2023-07-31-preview').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('script-identity-{0}', parameters('uniqueid')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2019-10-01-preview",
              "name": "create-data-folder",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('script-identity-{0}', parameters('uniqueid'))))]": {}
                }
              },
              "location": "[resourceGroup().location]",
              "properties": {
                "azPowerShellVersion": "7.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "forceUpdateTag": "[parameters('currentTime')]",
                "arguments": "[format('-STORAGE \"{0}\" -CNN_STRING \"{1}\"', parameters('storageName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2021-06-01').keys[0].value)]",
                "scriptContent": "        param(\r\n          $STORAGE,\r\n          $CNN_STRING\r\n        )\r\n\r\n        # Create storage context\r\n        $storageContext = New-AzStorageContext -StorageAccountName $STORAGE -StorageAccountKey $CNN_STRING\r\n\r\n        # Check if the folder exists on the share in STORAGE with az module\r\n        $folderExists = (Get-AzStorageFile -ShareName $STORAGE -Path \"data\" -Context $storageContext | Where-Object {$_.GetType().Name -eq \"AzureStorageFileDirectory\"})\r\n\r\n        # If the folder does not exist, create it\r\n        if (-not $folderExists) {\r\n          New-AzStorageDirectory -ShareName $STORAGE -Path \"data\" -Context $storageContext\r\n        }\r\n      "
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('script-identity-{0}', parameters('uniqueid')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "uami",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueId": {
            "value": "[variables('uniqueid')]"
          },
          "prefix": {
            "value": "[parameters('namePrefix')]"
          },
          "storageName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageDeploy'), '2022-09-01').outputs.storageName.value]"
          },
          "mlWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'machine-learing-worksapce'), '2022-09-01').outputs.workspaceName.value]"
          },
          "acrName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.containerRegistryName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "12635821096483337301"
            }
          },
          "parameters": {
            "uniqueId": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageName": {
              "type": "string"
            },
            "mlWorkspaceName": {
              "type": "string"
            },
            "acrName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageName'))]",
              "name": "[guid(resourceGroup().id, format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1')]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-01-31').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.MachineLearningServices/workspaces/{0}', parameters('mlWorkspaceName'))]",
              "name": "[guid(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('mlWorkspaceName')), format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')), 'mlContributor')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-01-31').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('acrName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName')), format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')), 'acrpull')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')), 'contributor')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-01-31').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            }
          ],
          "outputs": {
            "uamiId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId')))]"
            },
            "uamiClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-uami-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-01-31').clientId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acrDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'machine-learing-worksapce')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageDeploy')]"
      ]
    },
    {
      "condition": "[not(parameters('useWebApps'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aca",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueId": {
            "value": "[variables('uniqueid')]"
          },
          "prefix": {
            "value": "[parameters('namePrefix')]"
          },
          "skipImagePulling": {
            "value": "[parameters('skipImageBuild')]"
          },
          "uamiId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'uami'), '2022-09-01').outputs.uamiId.value]"
          },
          "uamiClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'uami'), '2022-09-01').outputs.uamiClientId.value]"
          },
          "aiSearchAdminKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ai_search'), '2022-09-01').outputs.aiSearchAdminKey.value]"
          },
          "aiSearchEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ai_search'), '2022-09-01').outputs.aiSearchEndpoint.value]"
          },
          "aiSearchRegion": {
            "value": "[parameters('aiSearchRegion')]"
          },
          "cosmosDbKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy'), '2022-09-01').outputs.cosmosDbKey.value]"
          },
          "cosmosdbName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy'), '2022-09-01').outputs.cosmosdbName.value]"
          },
          "cosmosDbUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy'), '2022-09-01').outputs.cosmosDbUri.value]"
          },
          "openAiApiKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openaiDeploy'), '2022-09-01').outputs.aoaiResourceKey.value]"
          },
          "openAiName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openaiDeploy'), '2022-09-01').outputs.aoaiResourceName.value]"
          },
          "storageKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageDeploy'), '2022-09-01').outputs.storageKey.value]"
          },
          "storageName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageDeploy'), '2022-09-01').outputs.storageName.value]"
          },
          "documentIntelligenceEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'document-Intelligence'), '2022-09-01').outputs.documentIntelligenceEndpoint.value]"
          },
          "documentIntelligenceKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'document-Intelligence'), '2022-09-01').outputs.documentIntelligenceKey.value]"
          },
          "accountsVisionEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureVisionResource'), '2022-09-01').outputs.accountsVisionEndpoint.value]"
          },
          "accountsVisionKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureVisionResource'), '2022-09-01').outputs.accountsVisionKey.value]"
          },
          "mlWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'machine-learing-worksapce'), '2022-09-01').outputs.workspaceName.value]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logWorkspaceName')]"
          },
          "containerRegistry": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.containerRegistryName.value]"
          },
          "applicationInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid'))), '2020-02-02').InstrumentationKey]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "8264259320205874356"
            }
          },
          "parameters": {
            "uniqueId": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "uamiId": {
              "type": "string"
            },
            "uamiClientId": {
              "type": "string"
            },
            "openAiName": {
              "type": "string"
            },
            "openAiApiKey": {
              "type": "string"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string"
            },
            "containerRegistry": {
              "type": "string",
              "defaultValue": "[format('{0}acr{1}', parameters('prefix'), parameters('uniqueId'))]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "mlWorkspaceName": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "storageKey": {
              "type": "string"
            },
            "cosmosDbUri": {
              "type": "string"
            },
            "cosmosDbKey": {
              "type": "string"
            },
            "cosmosdbName": {
              "type": "string"
            },
            "documentIntelligenceEndpoint": {
              "type": "string"
            },
            "documentIntelligenceKey": {
              "type": "string"
            },
            "aiSearchEndpoint": {
              "type": "string"
            },
            "aiSearchAdminKey": {
              "type": "string"
            },
            "aiSearchRegion": {
              "type": "string"
            },
            "accountsVisionEndpoint": {
              "type": "string"
            },
            "accountsVisionKey": {
              "type": "string"
            },
            "skipImagePulling": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "chatContainerImage": "[if(not(parameters('skipImagePulling')), format('{0}.azurecr.io/research-copilot:latest', parameters('containerRegistry')), 'mcr.microsoft.com/mcr/hello-world')]",
            "mainContainerImage": "[if(not(parameters('skipImagePulling')), format('{0}.azurecr.io/research-copilot-main:latest', parameters('containerRegistry')), 'mcr.microsoft.com/mcr/hello-world')]",
            "apiContainerImage": "[if(not(parameters('skipImagePulling')), format('{0}.azurecr.io/research-copilot-api:latest', parameters('containerRegistry')), 'mcr.microsoft.com/mcr/hello-world')]",
            "allSettings": [
              {
                "name": "APPSETTING_WEBSITE_SITE_NAME",
                "value": "foo"
              },
              {
                "name": "AZURE_CLIENT_ID",
                "value": "[parameters('uamiClientId')]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[parameters('applicationInsightsInstrumentationKey')]"
              },
              {
                "name": "AZURE_OPENAI_API_VERSION",
                "value": "2024-02-15-preview"
              },
              {
                "name": "TEXT_CHUNK_SIZE",
                "value": "800"
              },
              {
                "name": "TEXT_CHUNK_OVERLAP",
                "value": "128"
              },
              {
                "name": "TENACITY_TIMEOUT",
                "value": "200"
              },
              {
                "name": "TENACITY_STOP_AFTER_DELAY",
                "value": "300"
              },
              {
                "name": "AML_CLUSTER_NAME",
                "value": "mm-doc-cpu-cluster"
              },
              {
                "name": "AML_VMSIZE",
                "value": "STANDARD_D2_V2"
              },
              {
                "name": "PYTHONUNBUFFERED",
                "value": "1"
              },
              {
                "name": "INITIAL_INDEX",
                "value": "rag-data"
              },
              {
                "name": "AML_SUBSCRIPTION_ID",
                "value": "[subscription().subscriptionId]"
              },
              {
                "name": "AML_RESOURCE_GROUP",
                "value": "[resourceGroup().name]"
              },
              {
                "name": "AML_WORKSPACE_NAME",
                "value": "[parameters('mlWorkspaceName')]"
              },
              {
                "name": "AZURE_FILE_SHARE_ACCOUNT",
                "value": "[parameters('storageName')]"
              },
              {
                "name": "AZURE_FILE_SHARE_NAME",
                "value": "[parameters('storageName')]"
              },
              {
                "name": "AZURE_FILE_SHARE_KEY",
                "value": "[parameters('storageKey')]"
              },
              {
                "name": "PYTHONPATH",
                "value": "./code/:../code:../TaskWeaver:./code/utils:../code/utils:../../code:../../code/utils"
              },
              {
                "name": "COSMOS_URI",
                "value": "[parameters('cosmosDbUri')]"
              },
              {
                "name": "COSMOS_KEY",
                "value": "[parameters('cosmosDbKey')]"
              },
              {
                "name": "COSMOS_DB_NAME",
                "value": "[parameters('cosmosdbName')]"
              },
              {
                "name": "COSMOS_CONTAINER_NAME",
                "value": "prompts"
              },
              {
                "name": "COSMOS_CATEGORYID",
                "value": "prompts"
              },
              {
                "name": "COSMOS_LOG_CONTAINER",
                "value": "logs"
              },
              {
                "name": "ROOT_PATH_INGESTION",
                "value": "/data/data"
              },
              {
                "name": "PROMPTS_PATH",
                "value": "prompts"
              },
              {
                "name": "DI_ENDPOINT",
                "value": "[parameters('documentIntelligenceEndpoint')]"
              },
              {
                "name": "DI_KEY",
                "value": "[parameters('documentIntelligenceKey')]"
              },
              {
                "name": "DI_API_VERSION",
                "value": "2024-02-29-preview"
              },
              {
                "name": "AZURE_OPENAI_RESOURCE",
                "value": "[parameters('openAiName')]"
              },
              {
                "name": "AZURE_OPENAI_KEY",
                "value": "[parameters('openAiApiKey')]"
              },
              {
                "name": "AZURE_OPENAI_MODEL",
                "value": "gpt-4o"
              },
              {
                "name": "AZURE_OPENAI_RESOURCE_1",
                "value": "[parameters('openAiName')]"
              },
              {
                "name": "AZURE_OPENAI_KEY_1",
                "value": "[parameters('openAiApiKey')]"
              },
              {
                "name": "AZURE_OPENAI_RESOURCE_2",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_KEY_2",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_RESOURCE_3",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_KEY_3",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_RESOURCE_4",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_KEY_4",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_EMBEDDING_MODEL",
                "value": "text-embedding-3-large"
              },
              {
                "name": "AZURE_OPENAI_MODEL_VISION",
                "value": "gpt-4o"
              },
              {
                "name": "AZURE_OPENAI_API_VERSION",
                "value": "2024-05-01-preview"
              },
              {
                "name": "AZURE_OPENAI_TEMPERATURE",
                "value": "0"
              },
              {
                "name": "AZURE_OPENAI_TOP_P",
                "value": "1.0"
              },
              {
                "name": "AZURE_OPENAI_MAX_TOKENS",
                "value": "1000"
              },
              {
                "name": "AZURE_OPENAI_STOP_SEQUENCE",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_EMBEDDING_MODEL_RESOURCE",
                "value": "[parameters('openAiName')]"
              },
              {
                "name": "AZURE_OPENAI_EMBEDDING_MODEL_RESOURCE_KEY",
                "value": "[parameters('openAiApiKey')]"
              },
              {
                "name": "AZURE_OPENAI_EMBEDDING_MODEL_API_VERSION",
                "value": "2023-12-01-preview"
              },
              {
                "name": "COG_SERV_ENDPOINT",
                "value": "[parameters('aiSearchEndpoint')]"
              },
              {
                "name": "COG_SERV_KEY",
                "value": "[parameters('aiSearchAdminKey')]"
              },
              {
                "name": "COG_SERV_LOCATION",
                "value": "[parameters('aiSearchRegion')]"
              },
              {
                "name": "AZURE_VISION_ENDPOINT",
                "value": "[parameters('accountsVisionEndpoint')]"
              },
              {
                "name": "AZURE_VISION_KEY",
                "value": "[parameters('accountsVisionKey')]"
              },
              {
                "name": "AZURE_OPENAI_ASSISTANTSAPI_ENDPOINT",
                "value": ""
              },
              {
                "name": "AZURE_OPENAI_ASSISTANTSAPI_KEY",
                "value": ""
              },
              {
                "name": "OPENAI_API_KEY",
                "value": ""
              },
              {
                "name": "COG_SEARCH_ENDPOINT",
                "value": "[parameters('aiSearchEndpoint')]"
              },
              {
                "name": "COG_SEARCH_ADMIN_KEY",
                "value": "[parameters('aiSearchAdminKey')]"
              },
              {
                "name": "COG_VEC_SEARCH_API_VERSION",
                "value": "2023-11-01"
              },
              {
                "name": "COG_SEARCH_ENDPOINT_PROD",
                "value": "[parameters('aiSearchEndpoint')]"
              },
              {
                "name": "COG_SEARCH_ADMIN_KEY_PROD",
                "value": "[parameters('aiSearchAdminKey')]"
              },
              {
                "name": "INGESTION_JOB_NAME",
                "value": "[format('{0}-ingestion-job-{1}', parameters('prefix'), parameters('uniqueId'))]"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-11-02-preview",
              "name": "[format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').primarySharedKey]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')), 'data')]",
              "properties": {
                "azureFile": {
                  "accountName": "[parameters('storageName')]",
                  "shareName": "[parameters('storageName')]",
                  "accountKey": "[parameters('storageKey')]",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2023-11-02-preview",
              "name": "[format('{0}-api-{1}', parameters('prefix'), parameters('uniqueId'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": false,
                    "targetPort": 80,
                    "transport": "auto"
                  },
                  "registries": [
                    {
                      "server": "[format('{0}.azurecr.io', parameters('containerRegistry'))]",
                      "identity": "[parameters('uamiId')]"
                    }
                  ]
                },
                "template": {
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  },
                  "volumes": [
                    {
                      "name": "data",
                      "storageName": "data",
                      "storageType": "AzureFile"
                    }
                  ],
                  "containers": [
                    {
                      "name": "api",
                      "image": "[variables('apiContainerImage')]",
                      "resources": {
                        "cpu": 2,
                        "memory": "4Gi"
                      },
                      "volumeMounts": [
                        {
                          "volumeName": "data",
                          "mountPath": "/data"
                        }
                      ],
                      "env": "[variables('allSettings')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "[resourceId('Microsoft.App/managedEnvironments/storages', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')), 'data')]"
              ]
            },
            {
              "type": "Microsoft.App/jobs",
              "apiVersion": "2023-11-02-preview",
              "name": "[format('{0}-ingestion-job-{1}', parameters('prefix'), parameters('uniqueId'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "configuration": {
                  "replicaTimeout": "[mul(60, 60)]",
                  "triggerType": "Manual",
                  "registries": [
                    {
                      "server": "[format('{0}.azurecr.io', parameters('containerRegistry'))]",
                      "identity": "[parameters('uamiId')]"
                    }
                  ]
                },
                "template": {
                  "volumes": [
                    {
                      "name": "data",
                      "storageName": "data",
                      "storageType": "AzureFile"
                    }
                  ],
                  "containers": [
                    {
                      "name": "ingestion",
                      "image": "[variables('apiContainerImage')]",
                      "command": [
                        "python"
                      ],
                      "args": [
                        "ingest_doc.py",
                        "\"--ingestion_params_dict\"",
                        "{}"
                      ],
                      "resources": {
                        "cpu": 2,
                        "memory": "4Gi"
                      },
                      "volumeMounts": [
                        {
                          "volumeName": "data",
                          "mountPath": "/data"
                        }
                      ],
                      "env": "[variables('allSettings')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "[resourceId('Microsoft.App/managedEnvironments/storages', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')), 'data')]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2023-11-02-preview",
              "name": "[format('{0}-chat-{1}', parameters('prefix'), parameters('uniqueId'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "targetPort": 80,
                    "transport": "auto"
                  },
                  "registries": [
                    {
                      "server": "[format('{0}.azurecr.io', parameters('containerRegistry'))]",
                      "identity": "[parameters('uamiId')]"
                    }
                  ]
                },
                "template": {
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  },
                  "containers": [
                    {
                      "name": "chat",
                      "image": "[variables('chatContainerImage')]",
                      "resources": {
                        "cpu": 1,
                        "memory": "2Gi"
                      },
                      "env": [
                        {
                          "name": "API_BASE_URL",
                          "value": "[format('http://{0}', format('{0}-api-{1}', parameters('prefix'), parameters('uniqueId')))]"
                        }
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/containerApps', format('{0}-api-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2023-11-02-preview",
              "name": "[format('{0}-main-{1}', parameters('prefix'), parameters('uniqueId'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "targetPort": 80,
                    "transport": "auto"
                  },
                  "registries": [
                    {
                      "server": "[format('{0}.azurecr.io', parameters('containerRegistry'))]",
                      "identity": "[parameters('uamiId')]"
                    }
                  ]
                },
                "template": {
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  },
                  "containers": [
                    {
                      "name": "ui",
                      "image": "[variables('mainContainerImage')]",
                      "resources": {
                        "cpu": 1,
                        "memory": "2Gi"
                      },
                      "env": [
                        {
                          "name": "API_BASE_URL",
                          "value": "[format('http://{0}', format('{0}-api-{1}', parameters('prefix'), parameters('uniqueId')))]"
                        }
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/containerApps', format('{0}-api-{1}', parameters('prefix'), parameters('uniqueId')))]",
                "[resourceId('Microsoft.App/managedEnvironments', format('{0}-containerAppEnv-{1}', parameters('prefix'), parameters('uniqueId')))]"
              ]
            }
          ],
          "outputs": {
            "mainContainerAppUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', format('{0}-main-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-11-02-preview').latestRevisionFqdn]"
            },
            "chatContainerAppUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', format('{0}-chat-{1}', parameters('prefix'), parameters('uniqueId'))), '2023-11-02-preview').latestRevisionFqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acrDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'ai_search')]",
        "[resourceId('Microsoft.Insights/components', format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid')))]",
        "[resourceId('Microsoft.Resources/deployments', 'azureVisionResource')]",
        "[resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'document-Intelligence')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'machine-learing-worksapce')]",
        "[resourceId('Microsoft.Resources/deployments', 'openaiDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'uami')]"
      ]
    },
    {
      "condition": "[parameters('useWebApps')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "webapp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueId": {
            "value": "[variables('uniqueid')]"
          },
          "prefix": {
            "value": "[parameters('namePrefix')]"
          },
          "uamiId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'uami'), '2022-09-01').outputs.uamiId.value]"
          },
          "uamiClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'uami'), '2022-09-01').outputs.uamiClientId.value]"
          },
          "aiSearchAdminKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ai_search'), '2022-09-01').outputs.aiSearchAdminKey.value]"
          },
          "aiSearchEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ai_search'), '2022-09-01').outputs.aiSearchEndpoint.value]"
          },
          "aiSearchRegion": {
            "value": "[parameters('aiSearchRegion')]"
          },
          "cosmosDbKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy'), '2022-09-01').outputs.cosmosDbKey.value]"
          },
          "cosmosdbName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy'), '2022-09-01').outputs.cosmosdbName.value]"
          },
          "cosmosDbUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy'), '2022-09-01').outputs.cosmosDbUri.value]"
          },
          "openAiApiKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openaiDeploy'), '2022-09-01').outputs.aoaiResourceKey.value]"
          },
          "openAiName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openaiDeploy'), '2022-09-01').outputs.aoaiResourceName.value]"
          },
          "storageKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageDeploy'), '2022-09-01').outputs.storageKey.value]"
          },
          "storageName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageDeploy'), '2022-09-01').outputs.storageName.value]"
          },
          "documentIntelligenceEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'document-Intelligence'), '2022-09-01').outputs.documentIntelligenceEndpoint.value]"
          },
          "documentIntelligenceKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'document-Intelligence'), '2022-09-01').outputs.documentIntelligenceKey.value]"
          },
          "accountsVisionEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureVisionResource'), '2022-09-01').outputs.accountsVisionEndpoint.value]"
          },
          "accountsVisionKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureVisionResource'), '2022-09-01').outputs.accountsVisionKey.value]"
          },
          "mlWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'machine-learing-worksapce'), '2022-09-01').outputs.workspaceName.value]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logWorkspaceName')]"
          },
          "containerRegistryName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.containerRegistryName.value]"
          },
          "containerRegistryPassword": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.containerRegistryPassword.value]"
          },
          "applicationInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid'))), '2020-02-02').InstrumentationKey]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "1601003687830349409"
            }
          },
          "parameters": {
            "uniqueId": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "uamiId": {
              "type": "string"
            },
            "uamiClientId": {
              "type": "string"
            },
            "openAiName": {
              "type": "string"
            },
            "openAiApiKey": {
              "type": "string"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "containerRegistryPassword": {
              "type": "securestring"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "mlWorkspaceName": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "storageKey": {
              "type": "string"
            },
            "cosmosDbUri": {
              "type": "string"
            },
            "cosmosDbKey": {
              "type": "string"
            },
            "cosmosdbName": {
              "type": "string"
            },
            "documentIntelligenceEndpoint": {
              "type": "string"
            },
            "documentIntelligenceKey": {
              "type": "string"
            },
            "aiSearchEndpoint": {
              "type": "string"
            },
            "aiSearchAdminKey": {
              "type": "string"
            },
            "aiSearchRegion": {
              "type": "string"
            },
            "accountsVisionEndpoint": {
              "type": "string"
            },
            "accountsVisionKey": {
              "type": "string"
            }
          },
          "variables": {
            "chatAppName": "[format('{0}-app-chat-{1}', parameters('prefix'), parameters('uniqueId'))]",
            "mainAppName": "[format('{0}-app-main-{1}', parameters('prefix'), parameters('uniqueId'))]",
            "apiAppName": "[format('{0}-app-api-{1}', parameters('prefix'), parameters('uniqueId'))]",
            "appServicePlanName": "[format('asp-{0}', variables('chatAppName'))]",
            "fileshare": {
              "accountName": "[parameters('storageName')]",
              "mountPath": "/data",
              "shareName": "[parameters('storageName')]",
              "type": "AzureFiles",
              "accessKey": "[parameters('storageKey')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "properties": {
                "elasticScaleEnabled": false,
                "hyperV": false,
                "isSpot": false,
                "isXenon": false,
                "maximumElasticWorkerCount": 1,
                "perSiteScaling": false,
                "reserved": true,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
              },
              "sku": {
                "capacity": 1,
                "family": "Pv3",
                "name": "P1v3",
                "size": "P1v3",
                "tier": "PremiumV3"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[variables('chatAppName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "httpsOnly": false,
                "keyVaultReferenceIdentity": "[parameters('uamiId')]",
                "hostNamesDisabled": false,
                "siteConfig": {
                  "acrUseManagedIdentityCreds": false,
                  "http20Enabled": true,
                  "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/research-copilot:latest', parameters('containerRegistryName'))]",
                  "numberOfWorkers": 1,
                  "alwaysOn": true
                },
                "storageAccountRequired": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[variables('mainAppName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "httpsOnly": false,
                "keyVaultReferenceIdentity": "[parameters('uamiId')]",
                "hostNamesDisabled": false,
                "siteConfig": {
                  "acrUseManagedIdentityCreds": false,
                  "http20Enabled": true,
                  "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/research-copilot-main:latest', parameters('containerRegistryName'))]",
                  "numberOfWorkers": 1,
                  "alwaysOn": true
                },
                "storageAccountRequired": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[variables('apiAppName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('uamiId'))]": {}
                }
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "httpsOnly": false,
                "keyVaultReferenceIdentity": "[parameters('uamiId')]",
                "hostNamesDisabled": false,
                "siteConfig": {
                  "acrUseManagedIdentityCreds": false,
                  "http20Enabled": true,
                  "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/research-copilot-api:latest', parameters('containerRegistryName'))]",
                  "numberOfWorkers": 1,
                  "alwaysOn": true
                },
                "storageAccountRequired": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('chatAppName'), 'appsettings')]",
              "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('applicationInsightsInstrumentationKey')]",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "DOCKER_ENABLE_CI": "1",
                "DOCKER_REGISTRY_SERVER_USERNAME": "[parameters('containerRegistryName')]",
                "DOCKER_REGISTRY_SERVER_PASSWORD": "[parameters('containerRegistryPassword')]",
                "DOCKER_REGISTRY_SERVER_URL": "[format('https://{0}.azurecr.io', parameters('containerRegistryName'))]",
                "API_BASE_URL": "[format('https://{0}.azurewebsites.net', variables('apiAppName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('chatAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('mainAppName'), 'appsettings')]",
              "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('applicationInsightsInstrumentationKey')]",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "DOCKER_ENABLE_CI": "1",
                "DOCKER_REGISTRY_SERVER_USERNAME": "[parameters('containerRegistryName')]",
                "DOCKER_REGISTRY_SERVER_PASSWORD": "[parameters('containerRegistryPassword')]",
                "DOCKER_REGISTRY_SERVER_URL": "[format('https://{0}.azurecr.io', parameters('containerRegistryName'))]",
                "API_BASE_URL": "[format('https://{0}.azurewebsites.net', variables('apiAppName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('mainAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('apiAppName'), 'appsettings')]",
              "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('applicationInsightsInstrumentationKey')]",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "DOCKER_REGISTRY_SERVER_USERNAME": "[parameters('containerRegistryName')]",
                "DOCKER_REGISTRY_SERVER_PASSWORD": "[parameters('containerRegistryPassword')]",
                "DOCKER_REGISTRY_SERVER_URL": "[format('https://{0}.azurecr.io', parameters('containerRegistryName'))]",
                "TEXT_CHUNK_SIZE": "800",
                "TEXT_CHUNK_OVERLAP": "128",
                "TENACITY_TIMEOUT": "200",
                "TENACITY_STOP_AFTER_DELAY": "300",
                "AML_CLUSTER_NAME": "mm-doc-cpu-cluster",
                "AML_VMSIZE": "STANDARD_D2_V2",
                "PYTHONUNBUFFERED": "1",
                "AZURE_CLIENT_ID": "[parameters('uamiClientId')]",
                "INITIAL_INDEX": "rag-data",
                "AML_SUBSCRIPTION_ID": "[subscription().subscriptionId]",
                "AML_RESOURCE_GROUP": "[resourceGroup().name]",
                "AML_WORKSPACE_NAME": "[parameters('mlWorkspaceName')]",
                "AZURE_FILE_SHARE_ACCOUNT": "[parameters('storageName')]",
                "AZURE_FILE_SHARE_NAME": "[parameters('storageName')]",
                "AZURE_FILE_SHARE_KEY": "[parameters('storageKey')]",
                "PYTHONPATH": "./code/:../code:../TaskWeaver:./code/utils:../code/utils:../../code:../../code/utils",
                "COSMOS_URI": "[parameters('cosmosDbUri')]",
                "COSMOS_KEY": "[parameters('cosmosDbKey')]",
                "COSMOS_DB_NAME": "[parameters('cosmosdbName')]",
                "COSMOS_CONTAINER_NAME": "prompts",
                "COSMOS_CATEGORYID": "prompts",
                "COSMOS_LOG_CONTAINER": "logs",
                "ROOT_PATH_INGESTION": "/data/data",
                "PROMPTS_PATH": "prompts",
                "DI_ENDPOINT": "[parameters('documentIntelligenceEndpoint')]",
                "DI_KEY": "[parameters('documentIntelligenceKey')]",
                "DI_API_VERSION": "2024-02-29-preview",
                "AZURE_OPENAI_RESOURCE": "[parameters('openAiName')]",
                "AZURE_OPENAI_KEY": "[parameters('openAiApiKey')]",
                "AZURE_OPENAI_MODEL": "gpt-4o",
                "AZURE_OPENAI_RESOURCE_1": "[parameters('openAiName')]",
                "AZURE_OPENAI_KEY_1": "[parameters('openAiApiKey')]",
                "AZURE_OPENAI_RESOURCE_2": "",
                "AZURE_OPENAI_KEY_2": "",
                "AZURE_OPENAI_RESOURCE_3": "",
                "AZURE_OPENAI_KEY_3": "",
                "AZURE_OPENAI_RESOURCE_4": "",
                "AZURE_OPENAI_KEY_4": "",
                "AZURE_OPENAI_EMBEDDING_MODEL": "text-embedding-3-large",
                "AZURE_OPENAI_MODEL_VISION": "gpt-4o",
                "AZURE_OPENAI_API_VERSION": "2024-05-01-preview",
                "AZURE_OPENAI_TEMPERATURE": "0",
                "AZURE_OPENAI_TOP_P": "1.0",
                "AZURE_OPENAI_MAX_TOKENS": "1000",
                "AZURE_OPENAI_STOP_SEQUENCE": "",
                "AZURE_OPENAI_EMBEDDING_MODEL_RESOURCE": "[parameters('openAiName')]",
                "AZURE_OPENAI_EMBEDDING_MODEL_RESOURCE_KEY": "[parameters('openAiApiKey')]",
                "AZURE_OPENAI_EMBEDDING_MODEL_API_VERSION": "2023-12-01-preview",
                "COG_SERV_ENDPOINT": "[parameters('aiSearchEndpoint')]",
                "COG_SERV_KEY": "[parameters('aiSearchAdminKey')]",
                "COG_SERV_LOCATION": "[parameters('aiSearchRegion')]",
                "AZURE_VISION_ENDPOINT": "[parameters('accountsVisionEndpoint')]",
                "AZURE_VISION_KEY": "[parameters('accountsVisionKey')]",
                "AZURE_OPENAI_ASSISTANTSAPI_ENDPOINT": "",
                "AZURE_OPENAI_ASSISTANTSAPI_KEY": "",
                "OPENAI_API_KEY": "",
                "COG_SEARCH_ENDPOINT": "[parameters('aiSearchEndpoint')]",
                "COG_SEARCH_ADMIN_KEY": "[parameters('aiSearchAdminKey')]",
                "COG_VEC_SEARCH_API_VERSION": "2023-11-01",
                "COG_SEARCH_ENDPOINT_PROD": "[parameters('aiSearchEndpoint')]",
                "COG_SEARCH_ADMIN_KEY_PROD": "[parameters('aiSearchAdminKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/serverfarms/{0}', variables('appServicePlanName'))]",
              "name": "[format('{0}-diagnosticSettings', variables('appServicePlanName'))]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', variables('chatAppName'))]",
              "name": "[format('{0}-diagnosticSettings', variables('chatAppName'))]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "categoryGroup": null,
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "categoryGroup": null,
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "categoryGroup": null,
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('chatAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', variables('mainAppName'))]",
              "name": "[format('{0}-diagnosticSettings', variables('mainAppName'))]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "categoryGroup": null,
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "categoryGroup": null,
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "categoryGroup": null,
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('mainAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', variables('apiAppName'))]",
              "name": "[format('{0}-diagnosticSettings', variables('apiAppName'))]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "categoryGroup": null,
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "categoryGroup": null,
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "categoryGroup": null,
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('chatAppName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Information"
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 35,
                    "retentionInDays": 1,
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('chatAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('mainAppName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Information"
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 35,
                    "retentionInDays": 1,
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('mainAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('apiAppName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Information"
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 35,
                    "retentionInDays": 1,
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/autoscalesettings",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-autoscale', variables('appServicePlanName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enabled": true,
                "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "profiles": [
                  {
                    "name": "Scale out condition",
                    "capacity": {
                      "maximum": "5",
                      "default": "1",
                      "minimum": "1"
                    },
                    "rules": [
                      {
                        "scaleAction": {
                          "type": "ChangeCount",
                          "direction": "Increase",
                          "cooldown": "PT5M",
                          "value": "1"
                        },
                        "metricTrigger": {
                          "metricName": "CpuPercentage",
                          "metricNamespace": "microsoft.web/serverfarms",
                          "operator": "GreaterThan",
                          "timeAggregation": "Average",
                          "threshold": 70,
                          "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                          "timeWindow": "PT10M",
                          "timeGrain": "PT1M",
                          "statistic": "Average"
                        }
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[extensionResourceId(resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')), 'Microsoft.Insights/diagnosticSettings', format('{0}-diagnosticSettings', variables('appServicePlanName')))]",
                "[resourceId('Microsoft.Web/sites', variables('chatAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('apiAppName'), 'web')]",
              "properties": {
                "azureStorageAccounts": {
                  "fileshare": "[variables('fileshare')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('chatAppName'), format('{0}.azurewebsites.net', variables('chatAppName')))]",
              "properties": {
                "hostNameType": "Verified",
                "siteName": "[variables('chatAppName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('chatAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('mainAppName'), format('{0}.azurewebsites.net', variables('mainAppName')))]",
              "properties": {
                "hostNameType": "Verified",
                "siteName": "[variables('mainAppName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('mainAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('apiAppName'), format('{0}.azurewebsites.net', variables('apiAppName')))]",
              "properties": {
                "hostNameType": "Verified",
                "siteName": "[variables('apiAppName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
              ]
            }
          ],
          "outputs": {
            "chatUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('chatAppName')), '2022-09-01').defaultHostName]"
            },
            "mainUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('mainAppName')), '2022-09-01').defaultHostName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acrDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'ai_search')]",
        "[resourceId('Microsoft.Insights/components', format('{0}-appin-{1}', parameters('namePrefix'), variables('uniqueid')))]",
        "[resourceId('Microsoft.Resources/deployments', 'azureVisionResource')]",
        "[resourceId('Microsoft.Resources/deployments', 'cosmosdbDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'document-Intelligence')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'machine-learing-worksapce')]",
        "[resourceId('Microsoft.Resources/deployments', 'openaiDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'uami')]"
      ]
    }
  ],
  "outputs": {
    "chatUrl": {
      "type": "string",
      "value": "[if(not(parameters('useWebApps')), reference(resourceId('Microsoft.Resources/deployments', 'aca'), '2022-09-01').outputs.chatContainerAppUrl.value, reference(resourceId('Microsoft.Resources/deployments', 'webapp'), '2022-09-01').outputs.chatUrl.value)]"
    },
    "mainUrl": {
      "type": "string",
      "value": "[if(not(parameters('useWebApps')), reference(resourceId('Microsoft.Resources/deployments', 'aca'), '2022-09-01').outputs.mainContainerAppUrl.value, reference(resourceId('Microsoft.Resources/deployments', 'webapp'), '2022-09-01').outputs.mainUrl.value)]"
    }
  }
}